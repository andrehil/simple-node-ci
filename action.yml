name: 'Node CI'
description: 'Simple opinionated node CI pipeline'
author: 'Andre Hildinger'
inputs:
  node-version:
    description: 'Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.'
    required: true
  cache:
    description: 'Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.'
    default: 'npm'
  cache-dependency-path:
    description: 'Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.'
  install-command:
    description: 'The command that will be executed to install the dependencies.'
    default: 'npm ci'
  lint-command:
    description: 'The command that will be executed to lint on the project.'
    default: 'npm run lint'
  build-command:
    description: 'The command that will be executed to build the project.'
    default: 'npm run build'
  test-command:
    description: 'The command that will be executed to run unit tests.'
    default: 'npm test'
  start-command:
    description: 'The command that will be executed to start the application.'
    default: 'npm start'
  integration-test-lib:
    description: 'The library used to run integration tests. Accepts "playwright", "cypress", or "" for custom tests.'
    default: 'playwright'
  integration-test-command:
    description: 'The command that will be executed to run integration tests.'
    default: 'npm run test:pw'

runs:
  using: 'composite'
  steps:

  - uses: actions/checkout@v4
  - uses: actions/setup-node@v4
    with:
      node-version: ${{ inputs.node-version }}
      cache: ${{ inputs.cache }}
      cache-dependency-path: ${{ inputs.cache-dependency-path }}
  - name: Install dependencies
    shell: bash
    run: ${{ inputs.install-command }}

  - name: Initialize CodeQL
    uses: github/codeql-action/init@v3
    with:
      languages: 'javascript'
  - name: Perform CodeQL Analysis
    uses: github/codeql-action/analyze@v3

  - name: Lint
    shell: bash
    run: ${{ inputs.lint-command }}

  - name: Build
    shell: bash
    run: ${{ inputs.build-command }}

  - name: Run Unit Tests
    shell: bash
    run: ${{ inputs.test-command }}

  # Playwright
  - name: Install Playwright Browsers
    if: ${{ inputs.integration-test-lib == 'playwright' }}
    shell: bash
    run: npx playwright install --with-deps
  - name: Run Playwright Tests
    if: ${{ inputs.integration-test-lib == 'playwright' }}
    shell: bash
    run: ${{ inputs.start-command }} & ${{ inputs.integration-test-command }}
  - uses: actions/upload-artifact@v4
    if: ${{ inputs.integration-test-lib == 'playwright' && !cancelled() }}
    with:
      name: playwright-report
      path: playwright-report/
      retention-days: 30
